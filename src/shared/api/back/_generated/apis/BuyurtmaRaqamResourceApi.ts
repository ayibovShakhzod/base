/* tslint:disable */
/* eslint-disable */
/**
 * Tech-Inventory API
 * Rest API of TECH-INVENTORY
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import useSWR, { SWRConfiguration, SWRResponse } from "swr";
import {
    BuyurtmaRaqamDTO,
    BuyurtmaRaqamDTOFromJSON,
    BuyurtmaRaqamDTOToJSON,
} from '../models';

export interface CreateBuyurtmaRaqamRequest {
    buyurtmaRaqamDTO: BuyurtmaRaqamDTO;
}

export interface DeleteBuyurtmaRaqamRequest {
    id: number;
}

export interface GetAllBuyurtmaRaqamsRequest {
    page?: number;
    size?: number;
    sort?: Array<string>;
}

export interface GetAllByLoyihaRequest {
    loyihaId: number;
    page?: number;
    size?: number;
    sort?: Array<string>;
}

export interface GetBuyurtmaRaqamRequest {
    id: number;
}

export interface PartialUpdateBuyurtmaRaqamRequest {
    id: number;
    buyurtmaRaqamDTO: BuyurtmaRaqamDTO;
}

export interface UpdateBuyurtmaRaqamRequest {
    id: number;
    buyurtmaRaqamDTO: BuyurtmaRaqamDTO;
}

/**
 * 
 */
export class BuyurtmaRaqamResourceApi extends runtime.BaseAPI {

    /**
     */
    protected createBuyurtmaRaqamRequestOpts = (requestParameters: CreateBuyurtmaRaqamRequest): runtime.RequestOpts => {
        if (requestParameters.buyurtmaRaqamDTO === null || requestParameters.buyurtmaRaqamDTO === undefined) {
            throw new runtime.RequiredError('buyurtmaRaqamDTO','Required parameter requestParameters.buyurtmaRaqamDTO was null or undefined when calling createBuyurtmaRaqam.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        return {
            path: `/api/buyurtma-raqams`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: BuyurtmaRaqamDTOToJSON(requestParameters.buyurtmaRaqamDTO),
        };
    }

    /**
     */
    protected createBuyurtmaRaqamFetch = async (context: runtime.RequestOpts, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BuyurtmaRaqamDTO>> => {
        const response = await this.request(context, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BuyurtmaRaqamDTOFromJSON(jsonValue));
    }

    /**
     */
    protected createBuyurtmaRaqamRaw = async (requestParameters: CreateBuyurtmaRaqamRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BuyurtmaRaqamDTO>> => {
        const context = this.createBuyurtmaRaqamRequestOpts(requestParameters);
        return this.createBuyurtmaRaqamFetch(context, initOverrides);
    }

    /**
     */
    createBuyurtmaRaqam = async (buyurtmaRaqamDTO: BuyurtmaRaqamDTO, initOverrides?: RequestInit): Promise<BuyurtmaRaqamDTO> => {
        const response = await this.createBuyurtmaRaqamRaw({ buyurtmaRaqamDTO: buyurtmaRaqamDTO }, initOverrides);
        return await response.value();
    }



    /**
     */
    protected deleteBuyurtmaRaqamRequestOpts = (requestParameters: DeleteBuyurtmaRaqamRequest): runtime.RequestOpts => {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteBuyurtmaRaqam.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        return {
            path: `/api/buyurtma-raqams/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        };
    }

    /**
     */
    protected deleteBuyurtmaRaqamFetch = async (context: runtime.RequestOpts, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> => {
        const response = await this.request(context, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    protected deleteBuyurtmaRaqamRaw = async (requestParameters: DeleteBuyurtmaRaqamRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> => {
        const context = this.deleteBuyurtmaRaqamRequestOpts(requestParameters);
        return this.deleteBuyurtmaRaqamFetch(context, initOverrides);
    }

    /**
     */
    deleteBuyurtmaRaqam = async (id: number, initOverrides?: RequestInit): Promise<void> => {
        await this.deleteBuyurtmaRaqamRaw({ id: id }, initOverrides);
    }



    /**
     */
    protected getAllBuyurtmaRaqamsRequestOpts = (requestParameters: GetAllBuyurtmaRaqamsRequest): runtime.RequestOpts => {
        const queryParameters: any = {};

        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }

        if (requestParameters.size !== undefined) {
            queryParameters['size'] = requestParameters.size;
        }

        if (requestParameters.sort) {
            queryParameters['sort'] = requestParameters.sort;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        return {
            path: `/api/buyurtma-raqams`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        };
    }

    /**
     */
    protected getAllBuyurtmaRaqamsFetch = async (context: runtime.RequestOpts, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<BuyurtmaRaqamDTO>>> => {
        const response = await this.request(context, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(BuyurtmaRaqamDTOFromJSON));
    }

    /**
     */
    protected getAllBuyurtmaRaqamsRaw = async (requestParameters: GetAllBuyurtmaRaqamsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<BuyurtmaRaqamDTO>>> => {
        const context = this.getAllBuyurtmaRaqamsRequestOpts(requestParameters);
        return this.getAllBuyurtmaRaqamsFetch(context, initOverrides);
    }

    /**
     */
    getAllBuyurtmaRaqams = async (page?: number, size?: number, sort?: Array<string>, initOverrides?: RequestInit): Promise<Array<BuyurtmaRaqamDTO>> => {
        const response = await this.getAllBuyurtmaRaqamsRaw({ page: page, size: size, sort: sort }, initOverrides);
        return await response.value();
    }


    /**
     */
    useGetAllBuyurtmaRaqams = (() => {
        const key = (page?: number, size?: number, sort?: Array<string>) => this.getAllBuyurtmaRaqamsRequestOpts({ page: page, size: size, sort: sort });
        const fetcher = (context: runtime.RequestOpts) => this.swrFetch(this.getAllBuyurtmaRaqamsFetch(context));
        const fn = (page?: number, size?: number, sort?: Array<string>, config?: SWRConfiguration<Array<BuyurtmaRaqamDTO>>): SWRResponse<Array<BuyurtmaRaqamDTO>> => {
            return useSWR<Array<BuyurtmaRaqamDTO>>(() => key(page, size, sort), fetcher, config);
        }
        fn.key = key
        return fn
    })()

    /**
     */
    protected getAllByLoyihaRequestOpts = (requestParameters: GetAllByLoyihaRequest): runtime.RequestOpts => {
        if (requestParameters.loyihaId === null || requestParameters.loyihaId === undefined) {
            throw new runtime.RequiredError('loyihaId','Required parameter requestParameters.loyihaId was null or undefined when calling getAllByLoyiha.');
        }

        const queryParameters: any = {};

        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }

        if (requestParameters.size !== undefined) {
            queryParameters['size'] = requestParameters.size;
        }

        if (requestParameters.sort) {
            queryParameters['sort'] = requestParameters.sort;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        return {
            path: `/api/buyurtma-raqams/loyiha/{loyihaId}`.replace(`{${"loyihaId"}}`, encodeURIComponent(String(requestParameters.loyihaId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        };
    }

    /**
     */
    protected getAllByLoyihaFetch = async (context: runtime.RequestOpts, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<BuyurtmaRaqamDTO>>> => {
        const response = await this.request(context, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(BuyurtmaRaqamDTOFromJSON));
    }

    /**
     */
    protected getAllByLoyihaRaw = async (requestParameters: GetAllByLoyihaRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<BuyurtmaRaqamDTO>>> => {
        const context = this.getAllByLoyihaRequestOpts(requestParameters);
        return this.getAllByLoyihaFetch(context, initOverrides);
    }

    /**
     */
    getAllByLoyiha = async (loyihaId: number, page?: number, size?: number, sort?: Array<string>, initOverrides?: RequestInit): Promise<Array<BuyurtmaRaqamDTO>> => {
        const response = await this.getAllByLoyihaRaw({ loyihaId: loyihaId, page: page, size: size, sort: sort }, initOverrides);
        return await response.value();
    }


    /**
     */
    useGetAllByLoyiha = (() => {
        const key = (requestParameters: GetAllByLoyihaRequest, config?: SWRConfiguration<Array<BuyurtmaRaqamDTO>>) => this.getAllByLoyihaRequestOpts(requestParameters);
        const fetcher = (context: runtime.RequestOpts) => this.swrFetch(this.getAllByLoyihaFetch(context));
        const fn = (requestParameters: GetAllByLoyihaRequest, config?: SWRConfiguration<Array<BuyurtmaRaqamDTO>>): SWRResponse<Array<BuyurtmaRaqamDTO>> => {
            return useSWR<Array<BuyurtmaRaqamDTO>>(() => key(requestParameters), fetcher, config);
        }
        fn.key = key
        return fn
    })()

    /**
     */
    protected getBuyurtmaRaqamRequestOpts = (requestParameters: GetBuyurtmaRaqamRequest): runtime.RequestOpts => {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getBuyurtmaRaqam.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        return {
            path: `/api/buyurtma-raqams/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        };
    }

    /**
     */
    protected getBuyurtmaRaqamFetch = async (context: runtime.RequestOpts, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BuyurtmaRaqamDTO>> => {
        const response = await this.request(context, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BuyurtmaRaqamDTOFromJSON(jsonValue));
    }

    /**
     */
    protected getBuyurtmaRaqamRaw = async (requestParameters: GetBuyurtmaRaqamRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BuyurtmaRaqamDTO>> => {
        const context = this.getBuyurtmaRaqamRequestOpts(requestParameters);
        return this.getBuyurtmaRaqamFetch(context, initOverrides);
    }

    /**
     */
    getBuyurtmaRaqam = async (id: number, initOverrides?: RequestInit): Promise<BuyurtmaRaqamDTO> => {
        const response = await this.getBuyurtmaRaqamRaw({ id: id }, initOverrides);
        return await response.value();
    }


    /**
     */
    useGetBuyurtmaRaqam = (() => {
        const key = (id: number) => this.getBuyurtmaRaqamRequestOpts({ id: id });
        const fetcher = (context: runtime.RequestOpts) => this.swrFetch(this.getBuyurtmaRaqamFetch(context));
        const fn = (id: number, config?: SWRConfiguration<BuyurtmaRaqamDTO>): SWRResponse<BuyurtmaRaqamDTO> => {
            return useSWR<BuyurtmaRaqamDTO>(() => key(id), fetcher, config);
        }
        fn.key = key
        return fn
    })()

    /**
     */
    protected partialUpdateBuyurtmaRaqamRequestOpts = (requestParameters: PartialUpdateBuyurtmaRaqamRequest): runtime.RequestOpts => {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling partialUpdateBuyurtmaRaqam.');
        }

        if (requestParameters.buyurtmaRaqamDTO === null || requestParameters.buyurtmaRaqamDTO === undefined) {
            throw new runtime.RequiredError('buyurtmaRaqamDTO','Required parameter requestParameters.buyurtmaRaqamDTO was null or undefined when calling partialUpdateBuyurtmaRaqam.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        return {
            path: `/api/buyurtma-raqams/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: BuyurtmaRaqamDTOToJSON(requestParameters.buyurtmaRaqamDTO),
        };
    }

    /**
     */
    protected partialUpdateBuyurtmaRaqamFetch = async (context: runtime.RequestOpts, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BuyurtmaRaqamDTO>> => {
        const response = await this.request(context, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BuyurtmaRaqamDTOFromJSON(jsonValue));
    }

    /**
     */
    protected partialUpdateBuyurtmaRaqamRaw = async (requestParameters: PartialUpdateBuyurtmaRaqamRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BuyurtmaRaqamDTO>> => {
        const context = this.partialUpdateBuyurtmaRaqamRequestOpts(requestParameters);
        return this.partialUpdateBuyurtmaRaqamFetch(context, initOverrides);
    }

    /**
     */
    partialUpdateBuyurtmaRaqam = async (id: number, buyurtmaRaqamDTO: BuyurtmaRaqamDTO, initOverrides?: RequestInit): Promise<BuyurtmaRaqamDTO> => {
        const response = await this.partialUpdateBuyurtmaRaqamRaw({ id: id, buyurtmaRaqamDTO: buyurtmaRaqamDTO }, initOverrides);
        return await response.value();
    }



    /**
     */
    protected updateBuyurtmaRaqamRequestOpts = (requestParameters: UpdateBuyurtmaRaqamRequest): runtime.RequestOpts => {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling updateBuyurtmaRaqam.');
        }

        if (requestParameters.buyurtmaRaqamDTO === null || requestParameters.buyurtmaRaqamDTO === undefined) {
            throw new runtime.RequiredError('buyurtmaRaqamDTO','Required parameter requestParameters.buyurtmaRaqamDTO was null or undefined when calling updateBuyurtmaRaqam.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        return {
            path: `/api/buyurtma-raqams/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: BuyurtmaRaqamDTOToJSON(requestParameters.buyurtmaRaqamDTO),
        };
    }

    /**
     */
    protected updateBuyurtmaRaqamFetch = async (context: runtime.RequestOpts, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BuyurtmaRaqamDTO>> => {
        const response = await this.request(context, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BuyurtmaRaqamDTOFromJSON(jsonValue));
    }

    /**
     */
    protected updateBuyurtmaRaqamRaw = async (requestParameters: UpdateBuyurtmaRaqamRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BuyurtmaRaqamDTO>> => {
        const context = this.updateBuyurtmaRaqamRequestOpts(requestParameters);
        return this.updateBuyurtmaRaqamFetch(context, initOverrides);
    }

    /**
     */
    updateBuyurtmaRaqam = async (id: number, buyurtmaRaqamDTO: BuyurtmaRaqamDTO, initOverrides?: RequestInit): Promise<BuyurtmaRaqamDTO> => {
        const response = await this.updateBuyurtmaRaqamRaw({ id: id, buyurtmaRaqamDTO: buyurtmaRaqamDTO }, initOverrides);
        return await response.value();
    }



}
