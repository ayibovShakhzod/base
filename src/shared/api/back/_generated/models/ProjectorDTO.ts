/* tslint:disable */
/* eslint-disable */
/**
 * Tech-Inventory API
 * Rest API of TECH-INVENTORY
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ProjectorTypeDTO,
    ProjectorTypeDTOFromJSON,
    ProjectorTypeDTOFromJSONTyped,
    ProjectorTypeDTOToJSON,
} from './ProjectorTypeDTO';

/**
 * 
 * @export
 * @interface ProjectorDTO
 */
export interface ProjectorDTO {
    /**
     * 
     * @type {number}
     * @memberof ProjectorDTO
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ProjectorDTO
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectorDTO
     */
    model?: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectorDTO
     */
    info?: string;
    /**
     * 
     * @type {ProjectorTypeDTO}
     * @memberof ProjectorDTO
     */
    projectorType?: ProjectorTypeDTO;
}


export function ProjectorDTOFromJSON(json: any): ProjectorDTO {
    return ProjectorDTOFromJSONTyped(json, false);
}

export function ProjectorDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectorDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'model': !exists(json, 'model') ? undefined : json['model'],
        'info': !exists(json, 'info') ? undefined : json['info'],
        'projectorType': !exists(json, 'projectorType') ? undefined : ProjectorTypeDTOFromJSON(json['projectorType']),
    };
}

export function ProjectorDTOToJSON(value?: ProjectorDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'model': value.model,
        'info': value.info,
        'projectorType': ProjectorTypeDTOToJSON(value.projectorType),
    };
}

