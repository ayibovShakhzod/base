/* tslint:disable */
/* eslint-disable */
/**
 * Tech-Inventory API
 * Rest API of TECH-INVENTORY
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ObyektDTO,
    ObyektDTOFromJSON,
    ObyektDTOFromJSONTyped,
    ObyektDTOToJSON,
} from './ObyektDTO';

/**
 * 
 * @export
 * @interface AvtomatDTO
 */
export interface AvtomatDTO {
    /**
     * 
     * @type {number}
     * @memberof AvtomatDTO
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof AvtomatDTO
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof AvtomatDTO
     */
    model?: string;
    /**
     * 
     * @type {string}
     * @memberof AvtomatDTO
     */
    group?: string;
    /**
     * 
     * @type {string}
     * @memberof AvtomatDTO
     */
    info?: string;
    /**
     * 
     * @type {ObyektDTO}
     * @memberof AvtomatDTO
     */
    obyekt?: ObyektDTO;
}


export function AvtomatDTOFromJSON(json: any): AvtomatDTO {
    return AvtomatDTOFromJSONTyped(json, false);
}

export function AvtomatDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): AvtomatDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'model': !exists(json, 'model') ? undefined : json['model'],
        'group': !exists(json, 'group') ? undefined : json['group'],
        'info': !exists(json, 'info') ? undefined : json['info'],
        'obyekt': !exists(json, 'obyekt') ? undefined : ObyektDTOFromJSON(json['obyekt']),
    };
}

export function AvtomatDTOToJSON(value?: AvtomatDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'model': value.model,
        'group': value.group,
        'info': value.info,
        'obyekt': ObyektDTOToJSON(value.obyekt),
    };
}

