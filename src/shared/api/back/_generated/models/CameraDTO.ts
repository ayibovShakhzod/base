/* tslint:disable */
/* eslint-disable */
/**
 * Tech-Inventory API
 * Rest API of TECH-INVENTORY
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CameraBrandDTO,
    CameraBrandDTOFromJSON,
    CameraBrandDTOFromJSONTyped,
    CameraBrandDTOToJSON,
} from './CameraBrandDTO';
import {
    CameraTypeDTO,
    CameraTypeDTOFromJSON,
    CameraTypeDTOFromJSONTyped,
    CameraTypeDTOToJSON,
} from './CameraTypeDTO';

/**
 * Camera
 * @export
 * @interface CameraDTO
 */
export interface CameraDTO {
    /**
     * 
     * @type {number}
     * @memberof CameraDTO
     */
    id?: number;
    /**
     * Nomi 'Camera1'
     * @type {string}
     * @memberof CameraDTO
     */
    name: string;
    /**
     * Model.
     * @type {string}
     * @memberof CameraDTO
     */
    model?: string;
    /**
     * Seriya raqami.
     * @type {string}
     * @memberof CameraDTO
     */
    serialNumber?: string;
    /**
     * IP
     * @type {string}
     * @memberof CameraDTO
     */
    ip: string;
    /**
     * Status
     * @type {string}
     * @memberof CameraDTO
     */
    status?: CameraDTOStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof CameraDTO
     */
    info?: string;
    /**
     * 
     * @type {CameraTypeDTO}
     * @memberof CameraDTO
     */
    cameraType?: CameraTypeDTO;
    /**
     * 
     * @type {CameraBrandDTO}
     * @memberof CameraDTO
     */
    cameraBrand?: CameraBrandDTO;
}

/**
* @export
* @enum {string}
*/
export type CameraDTOStatusEnum =
    | 'OFFLINE'
    | 'ONLINE'



export function CameraDTOFromJSON(json: any): CameraDTO {
    return CameraDTOFromJSONTyped(json, false);
}

export function CameraDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CameraDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'model': !exists(json, 'model') ? undefined : json['model'],
        'serialNumber': !exists(json, 'serialNumber') ? undefined : json['serialNumber'],
        'ip': json['ip'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'info': !exists(json, 'info') ? undefined : json['info'],
        'cameraType': !exists(json, 'cameraType') ? undefined : CameraTypeDTOFromJSON(json['cameraType']),
        'cameraBrand': !exists(json, 'cameraBrand') ? undefined : CameraBrandDTOFromJSON(json['cameraBrand']),
    };
}

export function CameraDTOToJSON(value?: CameraDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'model': value.model,
        'serialNumber': value.serialNumber,
        'ip': value.ip,
        'status': value.status,
        'info': value.info,
        'cameraType': CameraTypeDTOToJSON(value.cameraType),
        'cameraBrand': CameraBrandDTOToJSON(value.cameraBrand),
    };
}

